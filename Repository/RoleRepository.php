<?php

namespace Esolving\ShopcartBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * RoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleRepository extends EntityRepository {
    
    public function findAllByLanguage($xlanguage) {
        $qb = $this->createQueryBuilder('role');
        $q = $qb->addSelect('role_type', 'languages')
                ->join("role.role_type", "role_type")
                ->join("role_type.languages", "languages")
                ->where($qb->expr()->eq("role_type.category", ":category"))
                ->andWhere($qb->expr()->eq("languages.language", ":language"))
                ->setParameters(array(
                    'category' => 'role',
                    'language' => $xlanguage
                ))
                ->getQuery();
        return $q->getResult();
    }
    
    public function findOnlyUserByLanguage($xlanguage) {
        $qb = $this->createQueryBuilder('role');
        $q = $qb->addSelect('role_type', 'languages')
                ->join("role.role_type", "role_type")
                ->join("role_type.languages", "languages")
                ->where($qb->expr()->eq("role_type.category", ":category"))
                ->andWhere($qb->expr()->eq("role_type.name", ":name"))
                ->andWhere($qb->expr()->eq("languages.language", ":language"))
                ->setParameters(array(
                    'category' => 'role',
                    'name' => 'ROLE_USER',
                    'language' => $xlanguage
                ))
                ->getQuery();
        return $q->getResult();
    }

    public function findAllByLanguageExceptAdmin($xlanguage) {
        $qb = $this->createQueryBuilder('role');
        $q = $qb->addSelect('role_type', 'languages')
                ->join("role.role_type", "role_type")
                ->join("role_type.languages", "languages")
                ->where($qb->expr()->eq("role_type.category", ":category"))
                ->andWhere($qb->expr()->neq("role_type.name", ":name"))
                ->andWhere($qb->expr()->eq("languages.language", ":language"))
                ->setParameters(array(
                    'category' => 'role',
                    'name' => 'ROLE_ADMIN',
                    'language' => $xlanguage
                ))
                ->getQuery();
        return $q->getResult();
    }

}
