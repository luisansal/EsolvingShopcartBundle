<?php

namespace Esolving\ShopcartBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SettingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SettingRepository extends EntityRepository {
    
    public function findAllExcept($current_setting_id){
        $qb = $this->createQueryBuilder('setting');
        $qb = $qb
                ->where($qb->expr()->neq('setting.id', $qb->expr()->literal($current_setting_id)))
                ->getQuery()
            ;
        return $qb->getResult();
    }

    public function findOneByNameByLanguage($xname, $xlanguage) {
        $qb = $this->createQueryBuilder('setting');
        $q = $qb->addSelect('setting_type','setting_type_languages')
                ->join('setting.setting_type', 'setting_type')
                ->join('setting_type.languages', 'setting_type_languages')
                ->where($qb->expr()->eq('setting.status', ':setting_status'))
                ->andWhere($qb->expr()->eq('setting_type_languages.language', ':setting_type_language'))
                ->andWhere($qb->expr()->eq('setting.name', ':setting_name'))
                ->setParameters(array(
                    'setting_name' => $xname,
                    'setting_status' => true,
                    'setting_type_language' => $xlanguage
                ))
                ->getQuery()
        ;
        return $q->getOneOrNullResult();
//        return $q->getArrayResult();
    }

}
